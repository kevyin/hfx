-- GENERATED by C->Haskell Compiler, version 0.16.3 Crystal Seed, 24 Jan 2009 (Haskell)
-- Edit the ORIGNAL .chs file instead!


{-# LINE 1 "./Foreign/CUDA/Driver/Error.chs" #-}{-# LANGUAGE DeriveDataTypeable #-}
--------------------------------------------------------------------------------
-- |
-- Module    : Foreign.CUDA.Driver.Error
-- Copyright : (c) [2009..2011] Trevor L. McDonell
-- License   : BSD
--
-- Error handling
--
--------------------------------------------------------------------------------

module Foreign.CUDA.Driver.Error
  where


-- System
import Data.Typeable
import Control.Exception.Extensible


{-# LINE 21 "./Foreign/CUDA/Driver/Error.chs" #-}


--------------------------------------------------------------------------------
-- Return Status
--------------------------------------------------------------------------------

--
-- Error Codes
--
data Status = Success
            | InvalidValue
            | OutOfMemory
            | NotInitialized
            | Deinitialized
            | ProfilerDisabled
            | ProfilerNotInitialized
            | ProfilerAlreadyStarted
            | ProfilerAlreadyStopped
            | NoDevice
            | InvalidDevice
            | InvalidImage
            | InvalidContext
            | ContextAlreadyCurrent
            | MapFailed
            | UnmapFailed
            | ArrayIsMapped
            | AlreadyMapped
            | NoBinaryForGPU
            | AlreadyAcquired
            | NotMapped
            | NotMappedAsArray
            | NotMappedAsPointer
            | EccUncorrectable
            | UnsupportedLimit
            | ContextAlreadyInUse
            | InvalidSource
            | FileNotFound
            | SharedObjectSymbolNotFound
            | SharedObjectInitFailed
            | OperatingSystem
            | InvalidHandle
            | NotFound
            | NotReady
            | LaunchFailed
            | LaunchOutOfResources
            | LaunchTimeout
            | LaunchIncompatibleTexturing
            | PeerAccessAlreadyEnabled
            | PeerAccessNotEnabled
            | PrimaryContextActive
            | ContextIsDestroyed
            | Assert
            | TooManyPeers
            | HostMemoryAlreadyRegistered
            | HostMemoryNotRegistered
            | Unknown
            deriving (Eq,Show)
instance Enum Status where
  fromEnum Success = 0
  fromEnum InvalidValue = 1
  fromEnum OutOfMemory = 2
  fromEnum NotInitialized = 3
  fromEnum Deinitialized = 4
  fromEnum ProfilerDisabled = 5
  fromEnum ProfilerNotInitialized = 6
  fromEnum ProfilerAlreadyStarted = 7
  fromEnum ProfilerAlreadyStopped = 8
  fromEnum NoDevice = 100
  fromEnum InvalidDevice = 101
  fromEnum InvalidImage = 200
  fromEnum InvalidContext = 201
  fromEnum ContextAlreadyCurrent = 202
  fromEnum MapFailed = 205
  fromEnum UnmapFailed = 206
  fromEnum ArrayIsMapped = 207
  fromEnum AlreadyMapped = 208
  fromEnum NoBinaryForGPU = 209
  fromEnum AlreadyAcquired = 210
  fromEnum NotMapped = 211
  fromEnum NotMappedAsArray = 212
  fromEnum NotMappedAsPointer = 213
  fromEnum EccUncorrectable = 214
  fromEnum UnsupportedLimit = 215
  fromEnum ContextAlreadyInUse = 216
  fromEnum InvalidSource = 300
  fromEnum FileNotFound = 301
  fromEnum SharedObjectSymbolNotFound = 302
  fromEnum SharedObjectInitFailed = 303
  fromEnum OperatingSystem = 304
  fromEnum InvalidHandle = 400
  fromEnum NotFound = 500
  fromEnum NotReady = 600
  fromEnum LaunchFailed = 700
  fromEnum LaunchOutOfResources = 701
  fromEnum LaunchTimeout = 702
  fromEnum LaunchIncompatibleTexturing = 703
  fromEnum PeerAccessAlreadyEnabled = 704
  fromEnum PeerAccessNotEnabled = 705
  fromEnum PrimaryContextActive = 708
  fromEnum ContextIsDestroyed = 709
  fromEnum Assert = 710
  fromEnum TooManyPeers = 711
  fromEnum HostMemoryAlreadyRegistered = 712
  fromEnum HostMemoryNotRegistered = 713
  fromEnum Unknown = 999

  toEnum 0 = Success
  toEnum 1 = InvalidValue
  toEnum 2 = OutOfMemory
  toEnum 3 = NotInitialized
  toEnum 4 = Deinitialized
  toEnum 5 = ProfilerDisabled
  toEnum 6 = ProfilerNotInitialized
  toEnum 7 = ProfilerAlreadyStarted
  toEnum 8 = ProfilerAlreadyStopped
  toEnum 100 = NoDevice
  toEnum 101 = InvalidDevice
  toEnum 200 = InvalidImage
  toEnum 201 = InvalidContext
  toEnum 202 = ContextAlreadyCurrent
  toEnum 205 = MapFailed
  toEnum 206 = UnmapFailed
  toEnum 207 = ArrayIsMapped
  toEnum 208 = AlreadyMapped
  toEnum 209 = NoBinaryForGPU
  toEnum 210 = AlreadyAcquired
  toEnum 211 = NotMapped
  toEnum 212 = NotMappedAsArray
  toEnum 213 = NotMappedAsPointer
  toEnum 214 = EccUncorrectable
  toEnum 215 = UnsupportedLimit
  toEnum 216 = ContextAlreadyInUse
  toEnum 300 = InvalidSource
  toEnum 301 = FileNotFound
  toEnum 302 = SharedObjectSymbolNotFound
  toEnum 303 = SharedObjectInitFailed
  toEnum 304 = OperatingSystem
  toEnum 400 = InvalidHandle
  toEnum 500 = NotFound
  toEnum 600 = NotReady
  toEnum 700 = LaunchFailed
  toEnum 701 = LaunchOutOfResources
  toEnum 702 = LaunchTimeout
  toEnum 703 = LaunchIncompatibleTexturing
  toEnum 704 = PeerAccessAlreadyEnabled
  toEnum 705 = PeerAccessNotEnabled
  toEnum 708 = PrimaryContextActive
  toEnum 709 = ContextIsDestroyed
  toEnum 710 = Assert
  toEnum 711 = TooManyPeers
  toEnum 712 = HostMemoryAlreadyRegistered
  toEnum 713 = HostMemoryNotRegistered
  toEnum 999 = Unknown
  toEnum unmatched = error ("Status.toEnum: Cannot match " ++ show unmatched)

{-# LINE 35 "./Foreign/CUDA/Driver/Error.chs" #-}


-- |
-- Return a descriptive error string associated with a particular error code
--
describe :: Status -> String
describe Success                        = "no error"
describe InvalidValue                   = "invalid argument"
describe OutOfMemory                    = "out of memory"
describe NotInitialized                 = "driver not initialised"
describe Deinitialized                  = "driver deinitialised"
describe NoDevice                       = "no CUDA-capable device is available"
describe InvalidDevice                  = "invalid device ordinal"
describe InvalidImage                   = "invalid kernel image"
describe InvalidContext                 = "invalid context handle"
describe ContextAlreadyCurrent          = "context already current"
describe MapFailed                      = "map failed"
describe UnmapFailed                    = "unmap failed"
describe ArrayIsMapped                  = "array is mapped"
describe AlreadyMapped                  = "already mapped"
describe NoBinaryForGPU                 = "no binary available for this GPU"
describe AlreadyAcquired                = "resource already acquired"
describe NotMapped                      = "not mapped"
describe InvalidSource                  = "invalid source"
describe FileNotFound                   = "file not found"
describe InvalidHandle                  = "invalid handle"
describe NotFound                       = "not found"
describe NotReady                       = "device not ready"
describe LaunchFailed                   = "unspecified launch failure"
describe LaunchOutOfResources           = "too many resources requested for launch"
describe LaunchTimeout                  = "the launch timed out and was terminated"
describe LaunchIncompatibleTexturing    = "launch with incompatible texturing"
describe NotMappedAsArray               = "mapped resource not available for access as an array"
describe NotMappedAsPointer             = "mapped resource not available for access as a pointer"
describe EccUncorrectable               = "uncorrectable ECC error detected"
describe UnsupportedLimit               = "limits not supported by device"
describe SharedObjectSymbolNotFound     = "link to a shared object failed to resolve"
describe SharedObjectInitFailed         = "shared object initialisation failed"
describe OperatingSystem                = "operating system call failed"
describe ProfilerDisabled               = "profiling APIs disabled: application running with visual profiler"
describe ProfilerNotInitialized         = "profiler not initialised"
describe ProfilerAlreadyStarted         = "profiler already started"
describe ProfilerAlreadyStopped         = "profiler already stopped"
describe ContextAlreadyInUse            = "context is already bound to a thread and in use"
describe PeerAccessAlreadyEnabled       = "peer access already enabled"
describe PeerAccessNotEnabled           = "peer access has not been enabled"
describe PrimaryContextActive           = "primary context for this device has already been initialised"
describe ContextIsDestroyed             = "context already destroyed"
describe Assert                         = "device-side assert triggered"
describe TooManyPeers                   = "peer mapping resources exhausted"
describe HostMemoryAlreadyRegistered    = "part or all of the requested memory range is already mapped"
describe HostMemoryNotRegistered        = "pointer does not correspond to a registered memory region"
describe Unknown                        = "unknown error"


--------------------------------------------------------------------------------
-- Exceptions
--------------------------------------------------------------------------------

data CUDAException
  = ExitCode Status
  | UserError String
  deriving Typeable

instance Exception CUDAException

instance Show CUDAException where
  showsPrec _ (ExitCode  s) = showString ("CUDA Exception: " ++ describe s)
  showsPrec _ (UserError s) = showString ("CUDA Exception: " ++ s)


-- |
-- Raise a CUDAException in the IO Monad
--
cudaError :: String -> IO a
cudaError s = throwIO (UserError s)

-- |
-- A specially formatted error message
--
requireSDK :: Double -> String -> IO a
requireSDK v s = cudaError ("'" ++ s ++ "' requires at least cuda-" ++ show v)


--------------------------------------------------------------------------------
-- Helper Functions
--------------------------------------------------------------------------------

-- |
-- Return the results of a function on successful execution, otherwise throw an
-- exception with an error string associated with the return code
--
resultIfOk :: (Status, a) -> IO a
resultIfOk (status,result) =
    case status of
        Success -> return  result
        _       -> throwIO (ExitCode status)


-- |
-- Throw an exception with an error string associated with an unsuccessful
-- return code, otherwise return unit.
--
nothingIfOk :: Status -> IO ()
nothingIfOk status =
    case status of
        Success -> return  ()
        _       -> throwIO (ExitCode status)

